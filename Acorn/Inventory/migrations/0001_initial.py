# Generated by Django 4.2.6 on 2023-10-26 12:01

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Brand name')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category name')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Category safe URL')),
                ('is_active', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='Inventory.category')),
            ],
            options={
                'verbose_name_plural': 'Product categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_id', models.CharField(max_length=50, unique=True, verbose_name='Product website ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Product safe URL')),
                ('description', models.TextField(blank=True, verbose_name='Product description')),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date product created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date product last updated')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category', to='Inventory.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Product attribute name')),
                ('description', models.TextField(blank=True, verbose_name='Product attribute description')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(max_length=255, verbose_name='Attribute value')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute', to='Inventory.productattribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_values', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attribute_values', to='Inventory.productattributevalue')),
            ],
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=20, unique=True, verbose_name='Stock keeping unit')),
                ('upc', models.CharField(max_length=12, unique=True, verbose_name='Universal product code')),
                ('is_active', models.BooleanField(default=False, verbose_name='Product visibility')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default selection')),
                ('retail_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Recommended retail price')),
                ('store_price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Regular store price')),
                ('weight', models.FloatField(verbose_name='Product weight')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date sub-product created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date sub-product last updated')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand', to='Inventory.brand')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product', to='Inventory.product')),
                ('product_attribute_values', models.ManyToManyField(related_name='product_attribute_values', through='Inventory.ProductAttributeValues', to='Inventory.productattributevalue')),
            ],
            options={
                'verbose_name': 'Product inventory',
                'verbose_name_plural': 'Product inventories',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Type of product')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_checked', models.DateTimeField(blank=True, null=True, verbose_name='Inventory stock check date')),
                ('units', models.IntegerField(default=0, verbose_name='Units/qty of stock')),
                ('units_sold', models.IntegerField(default=0, verbose_name='Units sold to date')),
                ('product_inventory', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='stock_product_inventory', to='Inventory.productinventory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTypeAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_type_attribute', to='Inventory.productattribute')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute_type', to='Inventory.producttype')),
            ],
            options={
                'unique_together': {('product_attribute', 'product_type')},
            },
        ),
        migrations.AddField(
            model_name='producttype',
            name='product_type_attributes',
            field=models.ManyToManyField(related_name='product_type_attributes', through='Inventory.ProductTypeAttribute', to='Inventory.productattribute'),
        ),
        migrations.AddField(
            model_name='productinventory',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_type', to='Inventory.producttype'),
        ),
        migrations.AddField(
            model_name='productinventory',
            name='users_wishlist',
            field=models.ManyToManyField(blank=True, related_name='user_wishlist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productattributevalues',
            name='product_inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_inventory', to='Inventory.productinventory'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_url', models.ImageField(upload_to='images/')),
                ('alt_text', models.CharField(max_length=255, verbose_name='Alternative text')),
                ('is_feature', models.BooleanField(default=False, verbose_name='Product default image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date image created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date image last updated')),
                ('product_inventory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='media_product_inventory', to='Inventory.productinventory')),
            ],
            options={
                'verbose_name_plural': 'Product images',
            },
        ),
        migrations.AlterUniqueTogether(
            name='productattributevalues',
            unique_together={('attribute_values', 'product_inventory')},
        ),
    ]
